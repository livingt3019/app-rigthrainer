/**
 * @fileoverview added by tsickle
 * Generated from: src/material/card/card-module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { MatCommonModule } from '@angular/material/core';
import { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage, } from './card';
import * as ɵngcc0 from '@angular/core';
export class MatCardModule {
}
MatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });
MatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],
        MatCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,
        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,
        MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,
        MatCardHeader,
        MatCardTitleGroup,
        MatCardContent,
        MatCardTitle,
        MatCardSubtitle,
        MatCardActions,
        MatCardFooter,
        MatCardSmImage,
        MatCardMdImage,
        MatCardLgImage,
        MatCardImage,
        MatCardXlImage,
        MatCardAvatar,
        MatCommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{
        type: NgModule,
        args: [{
                imports: [MatCommonModule],
                exports: [
                    MatCard,
                    MatCardHeader,
                    MatCardTitleGroup,
                    MatCardContent,
                    MatCardTitle,
                    MatCardSubtitle,
                    MatCardActions,
                    MatCardFooter,
                    MatCardSmImage,
                    MatCardMdImage,
                    MatCardLgImage,
                    MatCardImage,
                    MatCardXlImage,
                    MatCardAvatar,
                    MatCommonModule,
                ],
                declarations: [
                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,
                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,
                    MatCardXlImage, MatCardAvatar,
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L2ZpbmFsMy9jdXJzb3Mvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL21hdGVyaWFsL2VzbTIwMTUvY2FyZC9jYXJkLW1vZHVsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztBQWVBOzs7O0NBQ0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkEyQkMiLCJmaWxlIjoiY2FyZC1tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogR2VuZXJhdGVkIGZyb206IHNyYy9tYXRlcmlhbC9jYXJkL2NhcmQtbW9kdWxlLnRzXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsY29uc3RhbnRQcm9wZXJ0eSxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHsgTWF0Q2FyZCwgTWF0Q2FyZEFjdGlvbnMsIE1hdENhcmRBdmF0YXIsIE1hdENhcmRDb250ZW50LCBNYXRDYXJkRm9vdGVyLCBNYXRDYXJkSGVhZGVyLCBNYXRDYXJkSW1hZ2UsIE1hdENhcmRMZ0ltYWdlLCBNYXRDYXJkTWRJbWFnZSwgTWF0Q2FyZFNtSW1hZ2UsIE1hdENhcmRTdWJ0aXRsZSwgTWF0Q2FyZFRpdGxlLCBNYXRDYXJkVGl0bGVHcm91cCwgTWF0Q2FyZFhsSW1hZ2UsIH0gZnJvbSAnLi9jYXJkJztcbmV4cG9ydCBjbGFzcyBNYXRDYXJkTW9kdWxlIHtcbn1cbk1hdENhcmRNb2R1bGUuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IE5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGltcG9ydHM6IFtNYXRDb21tb25Nb2R1bGVdLFxuICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZCxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZEhlYWRlcixcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZFRpdGxlR3JvdXAsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRDb250ZW50LFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkVGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRTdWJ0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZEFjdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRGb290ZXIsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRTbUltYWdlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkTWRJbWFnZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZExnSW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRJbWFnZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZFhsSW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRBdmF0YXIsXG4gICAgICAgICAgICAgICAgICAgIE1hdENvbW1vbk1vZHVsZSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkLCBNYXRDYXJkSGVhZGVyLCBNYXRDYXJkVGl0bGVHcm91cCwgTWF0Q2FyZENvbnRlbnQsIE1hdENhcmRUaXRsZSwgTWF0Q2FyZFN1YnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkQWN0aW9ucywgTWF0Q2FyZEZvb3RlciwgTWF0Q2FyZFNtSW1hZ2UsIE1hdENhcmRNZEltYWdlLCBNYXRDYXJkTGdJbWFnZSwgTWF0Q2FyZEltYWdlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkWGxJbWFnZSwgTWF0Q2FyZEF2YXRhcixcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxdIH1cbl07XG4iXX0=